#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usetheme[secheader]{Boadilla}
\usecolortheme{seahorse}
\title[Chapter 11: Monad transformers]{Chapter 11:
Computations in a functor context III}
\subtitle{Monad transformers}
\author{Sergei Winitzki}
\date{2019-01-05}
\institute[ABTB]{Academy by the Bay}
\setbeamertemplate{headline}{} % disable headline at top
\setbeamertemplate{navigation symbols}{} % disable navigation bar at bottom
\usepackage[all]{xy} % xypic
\usepackage[nocenter]{qtree} % simple tree drawing
\usepackage{relsize} % make math symbols larger or smaller
\newcommand{\bef}{\ensuremath\raisebox{2pt}{$\mathsmaller{\mathsmaller{\circ}}$}\hspace{-3.3pt},}
%\makeatletter
% Macros to assist LyX with XYpic when using scaling.
\newcommand{\xyScaleX}[1]{%
\makeatletter
\xydef@\xymatrixcolsep@{#1}
\makeatother
} % end of \xyScaleX
\makeatletter
\newcommand{\xyScaleY}[1]{%
\makeatletter
\xydef@\xymatrixrowsep@{#1}
\makeatother
} % end of \xyScaleY
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frame{
\backslash
titlepage}
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Beginning of slides.
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computations within a functor context: Combining monads
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Programs often need to combine monadic effects
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Effect
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $\equiv$
\end_inset

 what else happens in 
\size footnotesize

\begin_inset Formula $A\Rightarrow M^{B}$
\end_inset


\size default
 besides computing 
\begin_inset Formula $B$
\end_inset

 from 
\begin_inset Formula $A$
\end_inset


\end_layout

\begin_layout Itemize
Examples of effects for some standard monads:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Option
\family default
\size default
\color inherit
 – computation will have no result or a single result
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
List
\family default
\size default
\color inherit
 – computation will have zero, one, or multiple results
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Either
\family default
\size default
\color inherit
 – computation may fail to obtain its result, reports error
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Reader
\family default
\size default
\color inherit
 – computation needs to read an external context value
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Writer
\family default
\size default
\color inherit
 – some value will be appended to a (monoidal) accumulator
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Future
\family default
\size default
\color inherit
 – computation will be scheduled to run later
\end_layout

\end_deeper
\begin_layout Itemize
How to combine several effects in the same functor block (
\family typewriter
\size footnotesize
\color blue
for
\family default
\size default
\color inherit
/
\family typewriter
\size footnotesize
\color blue
yield
\family default
\size default
\color inherit
)?
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.35cm}
\end_layout

\end_inset


\family typewriter
\color blue

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\size footnotesize
\color darkgray
// This is not valid Scala!
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
val result = for { i 
\begin_inset Formula $\leftarrow$
\end_inset

 1 to n
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   j 
\begin_inset Formula $\leftarrow$
\end_inset

 Future { q(i) }
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   k 
\begin_inset Formula $\leftarrow$
\end_inset

 maybeError(j) : Try[Int]
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield f(k)
\end_layout

\begin_layout LyX-Code

\size footnotesize
\color darkgray
// What should be the type of result??
\end_layout

\end_inset


\begin_inset space ~
\end_inset

 
\begin_inset space ~
\end_inset

 
\begin_inset space ~
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  
\family default
\color darkgray
// This is not valid Scala!
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
(1 to n).flatMap { i 
\begin_inset Formula $\Rightarrow$
\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   Future(q(i)).flatMap { j 
\begin_inset Formula $\Rightarrow$
\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
     maybeError(j).map { k 
\begin_inset Formula $\Rightarrow$
\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
       f(k)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
         }}}
\end_layout

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
The code will work if we 
\begin_inset Quotes eld
\end_inset

unify
\begin_inset Quotes erd
\end_inset

 all effects in a new, larger monad
\end_layout

\begin_layout Itemize
Need to compute the type of new monad that contains all given effects
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Combining monadic effects I.
 Trial and error
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
There are several ways of combining two monads into a new monad:
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $M_{1}^{A}$
\end_inset

 and 
\begin_inset Formula $M_{2}^{A}$
\end_inset

 are monads then 
\begin_inset Formula $M_{1}^{A}\times M_{2}^{A}$
\end_inset

 is also a monad
\end_layout

\begin_deeper
\begin_layout Itemize
But 
\begin_inset Formula $M_{1}^{A}\times M_{2}^{A}$
\end_inset

 describes two separate values with two separate effects
\end_layout

\end_deeper
\begin_layout Itemize
If 
\begin_inset Formula $M_{1}^{A}$
\end_inset

 and 
\begin_inset Formula $M_{2}^{A}$
\end_inset

 are monads then 
\begin_inset Formula $M_{1}^{A}+M_{2}^{A}$
\end_inset

 is usually not a monad
\end_layout

\begin_deeper
\begin_layout Itemize
If it worked, it would be a choice between two different values / effects
\end_layout

\end_deeper
\begin_layout Itemize
If 
\begin_inset Formula $M_{1}^{A}$
\end_inset

 and 
\begin_inset Formula $M_{2}^{A}$
\end_inset

 are monads then one of 
\begin_inset Formula $M_{1}^{M_{2}^{A}}$
\end_inset

 or 
\begin_inset Formula $M_{2}^{M_{1}^{A}}$
\end_inset

 is often a monad
\end_layout

\begin_layout Itemize
Examples and counterexamples for functor composition:
\end_layout

\begin_deeper
\begin_layout Itemize
Combine 
\begin_inset Formula $Z\Rightarrow A$
\end_inset

 and 
\begin_inset Formula $\text{List}^{A}$
\end_inset

 as 
\begin_inset Formula $Z\Rightarrow\text{List}^{A}$
\end_inset


\end_layout

\begin_layout Itemize
Combine 
\family typewriter
\size footnotesize
\color blue
Future[A]
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
Option[A]
\family default
\size default
\color inherit
 as 
\family typewriter
\size footnotesize
\color blue
Future[Option[A]]
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
But 
\family typewriter
\size footnotesize
\color blue
Either[Z, Future[A]]
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
Option[Z 
\begin_inset Formula $\Rightarrow$
\end_inset

 A]
\family default
\size default
\color inherit
 are not monads
\end_layout

\begin_layout Itemize
Neither 
\family typewriter
\size footnotesize
\color blue
Future[State[A]]
\family default
\size default
\color inherit
 nor 
\family typewriter
\size footnotesize
\color blue
State[Future[A]]
\family default
\size default
\color inherit
 are monads
\end_layout

\end_deeper
\begin_layout Itemize
The order of effects matters when composition works both ways: 
\end_layout

\begin_deeper
\begin_layout Itemize
Combine 
\family typewriter
\size footnotesize
\color blue
Either
\family default
\size default
\color inherit
 (
\begin_inset Formula $M_{1}^{A}=Z+A$
\end_inset

) and 
\family typewriter
\size footnotesize
\color blue
Writer
\family default
\size default
\color inherit
 (
\begin_inset Formula $M_{2}^{A}=W\times A$
\end_inset

) 
\end_layout

\begin_deeper
\begin_layout Itemize
as 
\begin_inset Formula $Z+W\times A$
\end_inset

 – either compute result and write a message, or all fails
\end_layout

\begin_layout Itemize
as 
\begin_inset Formula $\left(Z+A\right)\times W$
\end_inset

 – message is always written, but computation may fail
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Find a general way of defining a new monad with combined effects
\end_layout

\begin_layout Itemize
Derive properties required for the new monad
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Combining monadic effects II.
 Lifting into a larger monad
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\end_layout

\end_inset


\size default
If a 
\begin_inset Quotes eld
\end_inset

big monad
\begin_inset Quotes erd
\end_inset

 
\family typewriter
\size footnotesize
\color blue
BigM[A]
\family default
\size default
\color inherit
 
\emph on
somehow
\emph default
 combines all the needed effects:
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\backslash
hspace{-0.35cm}
\end_layout

\end_inset


\family typewriter
\color blue

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// This could be valid Scala...
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
val result: BigM[Int] = for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   i 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(1 to n)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   j 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{2}$
\end_inset

(Future{ q(i) })
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   k 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{3}$
\end_inset

(maybeError(j))
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield f(k)
\end_layout

\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
 
\family roman
\color darkgray
// If we define the various
\end_layout

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
 // required 
\begin_inset Quotes eld
\end_inset

lifting
\begin_inset Quotes erd
\end_inset

 functions:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def lift
\begin_inset Formula $_{1}$
\end_inset

[A]: Seq[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 BigM[A] = ???
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def lift
\begin_inset Formula $_{2}$
\end_inset

[A]: Future[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 BigM[A] = ???
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def lift
\begin_inset Formula $_{3}$
\end_inset

[A]: Try[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 BigM[A] = ???   
\end_layout

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Example 1: combining as 
\family typewriter
\size footnotesize
\color blue
BigM[A] = Future[Option[A]]
\family default
\size default
\color inherit
 with liftings:
\end_layout

\begin_layout LyX-Code

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.4cm}
\end_layout

\end_inset


\family typewriter
\color blue
def lift
\begin_inset Formula $_{1}$
\end_inset

[A]: Option[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 Future[Option[A]] = Future.successful(_)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def lift
\begin_inset Formula $_{2}$
\end_inset

[A]: Future[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 Future[Option[A]] = _.map(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 Some(x))
\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\end_layout

\end_inset


\size default
Example 2: combining as 
\family typewriter
\size footnotesize
\color blue
BigM[A] = List[Try[A]]
\family default
\size default
\color inherit
 with liftings:
\end_layout

\begin_layout LyX-Code

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.05cm}
\end_layout

\end_inset


\family typewriter
\color blue
def lift
\begin_inset Formula $_{1}$
\end_inset

[A]: Try[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 List[Try[A]] = x 
\begin_inset Formula $\Rightarrow$
\end_inset

 List(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def lift
\begin_inset Formula $_{2}$
\end_inset

[A]: List[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 List[Try[A]] = _.map(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 Success(x))
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default
Remains to be understood:
\end_layout

\begin_layout Itemize
Finding suitable laws for the liftings; checking that the laws hold
\end_layout

\begin_layout Itemize
Building a 
\begin_inset Quotes eld
\end_inset

big monad
\begin_inset Quotes erd
\end_inset

 out of 
\begin_inset Quotes eld
\end_inset

smaller
\begin_inset Quotes erd
\end_inset

 ones, with lawful liftings
\end_layout

\begin_deeper
\begin_layout Itemize
Is this always possible? Unique? Are there alternative solutions?
\end_layout

\end_deeper
\begin_layout Itemize
Ways of reducing the complexity of code; make liftings automatic
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Laws for monad liftings I.
 Identity laws
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Whatever identities we expect to hold for monadic programs must continue
 to hold after lifting 
\family typewriter
\size footnotesize
\color blue
M
\begin_inset Formula $_{1}$
\end_inset


\family default
\size default
\color inherit
 or 
\family typewriter
\size footnotesize
\color blue
M
\begin_inset Formula $_{2}$
\end_inset


\family default
\size default
\color inherit
 values into the 
\begin_inset Quotes eld
\end_inset

big monad
\begin_inset Quotes erd
\end_inset

 
\family typewriter
\size footnotesize
\color blue
BigM
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
We assume that 
\family typewriter
\size footnotesize
\color blue
M
\begin_inset Formula $_{1}$
\end_inset


\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
M
\begin_inset Formula $_{2}$
\end_inset


\family default
\size default
\color inherit
, and 
\family typewriter
\size footnotesize
\color blue
BigM
\family default
\size default
\color inherit
 already satisfy all the monad laws
\end_layout

\begin_layout Standard
Consider the various functor block constructions containing the liftings:
\end_layout

\begin_layout Itemize
Left identity law after 
\family typewriter
\size footnotesize
\color blue
lift
\begin_inset Formula $_{1}$
\end_inset


\family default
\size default
\color inherit
 
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.3cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\family typewriter
\color blue

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "54col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Anywhere inside a for/yield:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
i 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(M
\begin_inset Formula $_{1}$
\end_inset

.pure(x))
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
j 
\begin_inset Formula $\leftarrow$
\end_inset

 bigM(i) 
\family roman
\color darkgray
// Any BigM value.
\end_layout

\end_inset


\begin_inset space ~
\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "54col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Must be equivalent to...
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
i = x
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
j 
\begin_inset Formula $\leftarrow$
\end_inset

 bigM(x)
\end_layout

\end_inset


\begin_inset VSpace smallskip
\end_inset

lift
\begin_inset Formula $_{1}$
\end_inset

(M
\begin_inset Formula $_{1}$
\end_inset

.pure(x)).flatMap(b) = b(x)
\family default
\size default
\color inherit
 — in terms of Kleisli composition 
\begin_inset Formula $\left(\diamond\right)$
\end_inset

:
\end_layout

\begin_layout Standard
\align center

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula $\left(\text{pure}_{M_{1}}\bef\text{lift}_{1}\right)^{:X\Rightarrow\text{BigM}^{X}}\diamond b^{:X\Rightarrow\text{BigM}^{Y}}=b$
\end_inset


\begin_inset space \hspace*{\fill}
\end_inset

with 
\begin_inset Formula $f^{:X\Rightarrow M^{Y}}\diamond g^{:Y\Rightarrow M^{Z}}\equiv x\Rightarrow f(x).\text{flatMap}(g)$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default
Right identity law after 
\family typewriter
\size footnotesize
\color blue
lift
\begin_inset Formula $_{1}$
\end_inset


\family default
\size default
\color inherit
 
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.3cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\family typewriter
\color blue

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "54col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Anywhere inside a for/yield:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 bigM 
\family roman
\color darkgray
// Any BigM value.
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
i 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(M
\begin_inset Formula $_{1}$
\end_inset

.pure(x))
\end_layout

\end_inset


\begin_inset space ~
\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "54col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Must be equivalent to...
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 bigM
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
i = x
\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset

b.flatMap(M
\begin_inset Formula $_{1}$
\end_inset

.pure andThen lift
\begin_inset Formula $_{1}$
\end_inset

) = b
\family default
\size default
\color inherit
 — in terms of Kleisli composition:
\end_layout

\begin_layout Standard
\align center

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula $b^{:X\Rightarrow\text{BigM}^{Y}}\diamond\left(\text{pure}_{M_{1}}\bef\text{lift}_{1}\right)^{:Y\Rightarrow\text{BigM}^{Y}}=b$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default
The same identity laws must hold for 
\family typewriter
\size footnotesize
\color blue
M
\begin_inset Formula $_{2}$
\end_inset


\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
lift
\begin_inset Formula $_{2}$
\end_inset


\family default
\size default
\color inherit
 as well
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Laws for monad liftings II.
 Simplifying the laws
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $\big(\text{pure}_{M_{1}}\bef\text{lift}_{1}\big)$
\end_inset

 is a unit for the Kleisli composition 
\begin_inset Formula $\diamond$
\end_inset

 in the monad 
\family typewriter
\size footnotesize
\color blue
BigM
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
But the monad 
\family typewriter
\size footnotesize
\color blue
BigM
\family default
\size default
\color inherit
 already has a unit element: 
\begin_inset Formula $\text{pure}_{\text{BigM}}$
\end_inset


\end_layout

\begin_layout Itemize
The two-sided unit element is always unique: 
\begin_inset Formula $\text{id}=\text{id}\diamond\text{id}^{\prime}=\text{id}^{\prime}$
\end_inset


\end_layout

\begin_layout Itemize
So the two identity laws for 
\begin_inset Formula $\big(\text{pure}_{M_{1}}\bef\text{lift}_{1}\big)$
\end_inset

 can be reduced to one law:
\size footnotesize

\begin_inset Formula 
\[
\text{pure}_{M_{1}}\bef\text{lift}_{1}=\text{pure}_{\text{BigM}}
\]

\end_inset


\end_layout

\begin_layout Standard
Refactoring a portion of a monadic program under 
\family typewriter
\size footnotesize
\color blue
lift
\begin_inset Formula $_{1}$
\end_inset


\family default
\size default
\color inherit
 gives another law:
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\family typewriter
\color blue

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "58col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Anywhere inside a for/yield:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
i 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(p) 
\family roman
\color darkgray
// Any M
\begin_inset Formula $_{1}$
\end_inset

 value.
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
j 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(q(i)) 
\family roman
\color darkgray
// Any M
\begin_inset Formula $_{1}$
\end_inset

 value.
\end_layout

\end_inset


\begin_inset space ~
\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Must be equivalent to...
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
pq = p.flatMap(q) 
\family roman
\color darkgray
// In M
\begin_inset Formula $_{1}$
\end_inset

.
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
j 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(pq)
\family roman
\color darkgray
  // Now lift it.
\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset

lift
\begin_inset Formula $_{1}$
\end_inset

(p).flatMap(q andThen lift
\begin_inset Formula $_{1}$
\end_inset

) = lift
\begin_inset Formula $_{1}$
\end_inset

(p flatMap q)
\end_layout

\begin_layout Itemize
Rewritten equivalently through 
\begin_inset Formula $\text{flm}_{M}:\left(A\Rightarrow M^{B}\right)\Rightarrow M^{A}\Rightarrow M^{B}$
\end_inset

 as
\end_layout

\begin_layout Standard
\align center

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula $\text{lift}_{1}\bef\text{flm}_{\text{BigM}}\left(q\bef\text{lift}_{1}\right)=\text{flm}_{M_{1}}q\bef\text{lift}_{1}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default
Rewritten in terms of Kleisli composition:
\end_layout

\begin_layout Standard
\align center

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula $\big(b^{:X\Rightarrow M_{1}^{Y}}\bef\text{lift}_{1}\big)\diamond\big(c^{:Y\Rightarrow M_{1}^{Z}}\bef\text{lift}_{1}\big)=\left(b\diamond c\right)\bef\text{lift}_{1}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.3cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default
Liftings 
\begin_inset Formula $\text{lift}_{1}$
\end_inset

 and 
\begin_inset Formula $\text{lift}_{2}$
\end_inset

 must obey an identity law and a composition law
\end_layout

\begin_layout Itemize
The laws say that the liftings 
\series bold
commute with
\series default
 the monads' operations
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Laws for monad liftings III.
 The naturality law
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Show that 
\begin_inset Formula $\text{lift}_{1}:M_{1}^{A}\Rightarrow\text{BigM}^{A}$
\end_inset

 is a natural transformation 
\end_layout

\begin_layout Itemize
It maps 
\begin_inset Formula $\text{pure}_{M_{1}}$
\end_inset

 to 
\begin_inset Formula $\text{pure}_{\text{BigM}}$
\end_inset

 and 
\begin_inset Formula $\text{flm}_{M_{1}}$
\end_inset

 to 
\begin_inset Formula $\text{flm}_{\text{BigM}}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\text{lift}_{1}$
\end_inset

 is a 
\series bold
monadic morphism
\series default
 between monads 
\begin_inset Formula $M_{1}^{\bullet}$
\end_inset

 and 
\begin_inset Formula $\text{BigM}^{\bullet}$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
The (functor) naturality law: 
\begin_inset Formula 
\[
\text{lift}_{1}\bef\text{fmap}_{B}f^{:X\Rightarrow Y}=\text{fmap}_{M_{1}}f^{:X\Rightarrow Y}\bef\text{lift}_{1}
\]

\end_inset


\size footnotesize

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.5cm}
\end_layout

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{2pc}\xyScaleX{3pc}M_{1}^{X}\ar[d]\sb(0.45){\text{fmap}_{M_{1}}\,f^{:X\Rightarrow Y}}\ar[r]\sp(0.45){\ \text{lift}_{1}} & \text{BigM}^{X}\ar[d]\sp(0.45){\text{fmap}_{\text{BigM}}\,f^{:X\Rightarrow Y}}\\
M_{1}^{Y}\ar[r]\sp(0.45){\text{lift}_{1}} & \text{BigM}^{Y}
}
\]

\end_inset


\size default
Derivation of the naturality law:
\end_layout

\begin_layout Itemize
Express 
\begin_inset Formula $\text{fmap}$
\end_inset

 as 
\begin_inset Formula $\text{fmap}_{M}f=\text{flm}_{M}\left(f\bef\text{pure}_{M}\right)$
\end_inset

 for both monads
\end_layout

\begin_layout Itemize
Given 
\begin_inset Formula $f^{:X\Rightarrow Y}$
\end_inset

, use the law 
\size footnotesize

\begin_inset Formula $\text{flm}_{M_{1}}q\bef\text{lift}_{1}=\text{lift}_{1}\bef\text{flm}_{\text{BigM}}\left(q\bef\text{lift}_{1}\right)$
\end_inset


\size default
 to compute 
\size footnotesize

\begin_inset Formula $\text{flm}_{M_{1}}\left(f\bef\text{pure}_{M_{1}}\right)\bef\text{lift}_{1}=\text{lift}_{1}\bef\text{flm}\left(f\bef\text{pure}_{M_{1}}\bef\text{lift}_{1}\right)=\text{lift}_{1}\bef\text{flm}\left(f\bef\text{pure}_{\text{BigM}}\right)=\text{lift}_{1}\bef\text{fmap}_{\text{BigM}}f$
\end_inset


\end_layout

\begin_layout Standard
A monadic morphism is always also a natural transformation of the functors
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Monad transformers I
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\size default
Combine 
\begin_inset Formula $Z\Rightarrow A$
\end_inset

 and 
\begin_inset Formula $1+A$
\end_inset

: only 
\begin_inset Formula $Z\Rightarrow1+A$
\end_inset

 works, not 
\begin_inset Formula $1+\left(Z\Rightarrow A\right)$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
It is not possible to combine monads via a natural bifunctor 
\begin_inset Formula $B^{M_{1},M_{2}}$
\end_inset


\end_layout

\begin_layout Itemize
It is not possible to combine arbitrary monads as 
\begin_inset Formula $M_{1}^{M_{2}^{\bullet}}$
\end_inset

 or 
\begin_inset Formula $M_{2}^{M_{1}^{\bullet}}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
But we can fix 
\begin_inset Formula $M_{1}^{\bullet}$
\end_inset

 (base monad) and to let 
\begin_inset Formula $M_{2}^{\bullet}$
\end_inset

 (foreign monad) vary
\end_layout

\begin_layout Itemize
The result is a monad transformer 
\begin_inset Formula $T_{M_{1}}^{M_{2},A}$
\end_inset

 – a natural functor in 
\begin_inset Formula $M_{2}$
\end_inset


\end_layout

\begin_layout Standard
A 
\series bold
monad transformer
\series default
 for a 
\series bold
base
\series default
 monad 
\begin_inset Formula $L^{\bullet}$
\end_inset

 is a type constructor 
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 parameterized by a monad 
\begin_inset Formula $M^{\bullet}$
\end_inset

, such that for all monads 
\begin_inset Formula $M^{\bullet}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 is a monad (the monad 
\begin_inset Formula $M$
\end_inset

 
\series bold
transformed with
\series default
 
\begin_inset Formula $T_{L}$
\end_inset

)
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Lifting
\begin_inset Quotes erd
\end_inset

 – a monadic morphism 
\begin_inset Formula $\text{lift}_{L}^{M}:M^{A}\leadsto T_{L}^{M,A}$
\end_inset

, natural in 
\begin_inset Formula $M^{\bullet}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Injection
\begin_inset Quotes erd
\end_inset

 – a monadic morphism 
\begin_inset Formula $\text{inj}:L^{A}\leadsto T_{L}^{M,A}$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 is 
\series bold
monadically natural
\series default
 in 
\begin_inset Formula $M^{\bullet}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 is natural w.r.t.
\begin_inset space ~
\end_inset

a monadic functor 
\begin_inset Formula $M^{\bullet}$
\end_inset

 as a type parameter
\end_layout

\begin_layout Itemize
For any monad 
\begin_inset Formula $N^{\bullet}$
\end_inset

 and a monadic morphism 
\begin_inset Formula $f:M^{\bullet}\leadsto N^{\bullet}$
\end_inset

 we need to have a monadic morphism 
\begin_inset Formula $T_{L}^{M,\bullet}\leadsto T_{L}^{N,\bullet}$
\end_inset

 for the transformed monads
\end_layout

\begin_layout Itemize
Naturality will hold if we implement 
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 only via 
\begin_inset Formula $M$
\end_inset

's monad methods 
\end_layout

\begin_layout Itemize
Cf.
\begin_inset space ~
\end_inset


\family typewriter
\size footnotesize
\color blue
traverse
\family default
\size small
\color inherit

\begin_inset Formula $:L^{A}\Rightarrow\left(A\Rightarrow F^{B}\right)\Rightarrow F^{L^{B}}$
\end_inset

 – natural w.r.t.
\begin_inset space ~
\end_inset

applicative 
\begin_inset Formula $F^{\bullet}$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Exercises
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\size small
Show that the method 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size small
\color inherit

\begin_inset Formula $:A\Rightarrow M^{A}$
\end_inset

 is a monadic morphism between monads 
\begin_inset Formula $\text{Id}^{A}\equiv A$
\end_inset

 and 
\begin_inset Formula $M^{A}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\size small
Show that 
\begin_inset Formula $M_{1}^{A}+M_{2}^{A}$
\end_inset

 is 
\emph on
not
\emph default
 a monad when 
\begin_inset Formula $M_{1}^{A}\equiv1+A$
\end_inset

 and 
\begin_inset Formula $M_{2}^{A}\equiv Z\Rightarrow A$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
End of slides.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
